/*
 * -------------------------------------------------
 *  Nextflow config file for running tests
 * -------------------------------------------------
 * Defines bundled input files and everything required
 * to run a fast and simple test. Use as follows:
 *   nextflow run nf-core/methylseq -profile test
 */
params {
  project_name            = 'test_run'
  project_description     = 'A simple imputation run on chrm 6 distributed with git repo'
  outDir                  = "output/${project_name}" // outDir: where to put all pipeline's outputs
  help                    = false
  max_memory = 1.GB
  max_cpus = 5
  max_time = 48.h
  // Reference panels
  // Per chromosomes [name, m3vcf, vcf_or_bcf]
  ref_panels = [
     ["test","/home/user24/test_ref/refPanel_testdata_22_phased.m3vcf.gz","/home/user24/test_ref/refPanel_testdata_22_phased.vcf.gz"],
  ]
  // Study datasets
  target_datasets = [
    ["test_target","/home/user24/test_ref/target_testdata.vcf.gz"]
  ]
  // Genetic map for eagle2
  //eagle_genetic_map = "/cbio/dbs/eagle2/genetic_map_hg38_withX.txt.gz"
  // Reference genome used for QC
  //reference_genome  = "/cbio/dbs/gatk/hg38/Homo_sapiens_assembly38.fasta"
  //eagle_genetic_map = "/cbio/dbs/refpanels/eagle/tables/genetic_map_hg19_withX.txt.gz"
  reference_genome = "/home/user24/test_ref/hg19_testdata.fasta"
  eagle_genetic_map = "/home/user24/test_ref/genetic_map_hg19_withX_testdata.txt.gz"
  //reference_genome = "/cbio/users/mamana/reference/gatk_bundle/human_g1k_v37_decoy.fasta"
  // List chromosomes to be used. Use ALL or '' to use all available chromosome in the target dataset
  chromosomes = "22"
  // imputation parameters
  NE = "20000"
  impute_iter = "10"
  impute_burnin = "2" // must be less than impute_burnin
  impute_info_cutoff = "0.3"
  chunk_size = "1000000" // in base
  buffer_size = "1000" // in base
  // QC parameters
  site_miss                = "0.05"
  hwe                     = "0.00001"
  mac                     = "1"
  min_ac = '2'
  min_alleles = '2'
  max_alleles = '2'
  // Phasing method: shapeit (default) or eagle2
  phasing_method          = "eagle"
  // Imputation method minimac4 (default) or IMPUTE2
  impute_method           = "minimac4"
  // Minimac4 option
  minRatio = '0.003'
  // Phasing method: eagle2 (default) or shapeit
  phasing_method          = "eagle"
  // Plink to use, sometimes it can be plink2
  plink="plink2"
}
timeline {
  enabled = true
  file = "${params.outDir}/nextflow_reports/${params.project_name}_h3achipimputation_timeline.html"
}
report {
  enabled = true
  file = "${params.outDir}/nextflow_reports/${params.project_name}_h3achipimputation_report.html"
}
trace {
  enabled = true
  file = "${params.outDir}/nextflow_reports/${params.project_name}_h3achipimputation_trace.txt"
}
dag {
  enabled = true
  file = "${params.outDir}/nextflow_reports/${params.project_name}_h3achipimputation_dag.png"
}
process {
// Process-specific resource requirements
  withLabel: 'medium' {
    // errorStrategy = { task.exitStatus in [143, 137, 255] ? 'retry' : 'ignore' }
    memory = 1.GB
  }
  withLabel : 'bigmem' {
    // errorStrategy = { task.exitStatus in [143, 137, 255] ? 'retry' : 'ignore' }
    memory = 1.GB
  }
}
profiles{
  singularity {
    singularity.runOptions = " -B ${HOME} "
  }
  slurm {
    queueSize = 10
  }
  test {
    queueSize = 10
  }
}